import java.util.*;
import java.lang.*;
import java.io.*;
class Main
{
    public static void main(String[] args) throws IOException
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine().trim());
        while(T-->0)
        {
            String[] s1 = br.readLine().trim().split(" ");
            int n = Integer.parseInt(s1[0]);
            int m = Integer.parseInt(s1[1]);
            char[][] grid = new char[n][m];
            for(int i = 0; i < n; i++){
                String S = br.readLine().trim();
                for(int j = 0; j < m; j++)
                {
                    grid[i][j] = S.charAt(j);
                }
            }
            String word = br.readLine().trim();
            Solution obj = new Solution();
            int[][] ans = obj.searchWord(grid, word);
            for(int i = 0; i < ans.length; i++)
            {
                for(int j = 0; j < ans[i].length; j++)
                {
                    System.out.print(ans[i][j] + " ");
                }
                System.out.println();
            }
            if(ans.length==0)
            {
                System.out.println("-1");
            }

        }
    }
}
class Solution
{
    public int[][] searchWord(char[][] grid, String word)
    {
        int n = grid.length;//row
        int m = grid[0].length;//col
        ArrayList<Integer> list = new ArrayList<>();
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==word.charAt(0))
                {
                    if(countForElem(grid,word,i,j,n,m))
                    {
                        list.add(i);
                        list.add(j);
                    }
                }
            }
        }
        int ans[][] = new int[list.size()/2][2];
        int ansx=0,ansy=0;
        int cnt=0;
        for(int i:list)
        {
            if(cnt%2==0)
            {
                ans[ansx][ansy] = i; 
                ansy++;
            }
            else
            {
                ans[ansx][ansy] = i;
                ansx++;
                ansy=0;
            }
            cnt++;
        }
        return ans;
    }
    int x[] = {-1,1,-1,1,0,0,1,-1};
    int y[] = {-1,-1,1,1,1,-1,0,0};
    public boolean countForElem(char grd[][],String word,int row,int col,int R,int C)
    {
        int len = word.length();
        for(int i=0;i<8;i++)
        {
            int rd=row+x[i],cd=col+y[i],k;
            for(k=1;k<len;k++)
            {
                if(rd>=R||cd>=C||cd<0||rd<0)
                {
                    break;
                }
                if(grd[rd][cd]!=word.charAt(k))
                {
                    break;
                }
                rd+=x[i];cd+=y[i];
            }
            if(k==len) 
            {
                return true;
            }
        }
        return false;
    }
}
